import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import lombok.RequiredArgsConstructor;

@Component
@RequiredArgsConstructor
public class RestTemplateUtil {

    private final RestTemplate restTemplate;

    public String post(String url, String request) {
        HttpHeaders headers = new HttpHeaders();
        headers.set("Content-Type", "application/json");

        HttpEntity<String> entity = new HttpEntity<>(request, headers);

        ResponseEntity<String> response = restTemplate.postForEntity(url, entity, String.class);

        return response.getBody();
    }
}

import org.springframework.stereotype.Service;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class MyService {

    private final RestTemplateUtil restTemplateUtil;

    public void makePostRequest() {
        String url = "http://example.com/api/resource";
        String jsonRequest = "{\"key\":\"value\"}";  // JSON 문자열로 요청 본문을 설정합니다.

        String response = restTemplateUtil.post(url, jsonRequest);
        // 응답 문자열을 처리합니다.
        System.out.println("Response: " + response);
    }
}
import org.springframework.stereotype.Service;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class AnotherService {

    private final RestTemplateUtil restTemplateUtil;

    public void performAnotherPostRequest() {
        String url = "http://example.com/api/another-resource";
        String jsonRequest = "{\"anotherKey\":\"anotherValue\"}";  // JSON 문자열로 요청 본문을 설정합니다.

        String response = restTemplateUtil.post(url, jsonRequest);
        // 응답 문자열을 처리합니다.
        System.out.println("Response: " + response);
    }
}

mbean=org.apache.activemq.artemis.broker="\\203.238.192.154\\"
System.out.println("MBean value: " + mbeanValue);
MBean value: org.apache.activemq.artemis.broker="\203.238.192.154\"
